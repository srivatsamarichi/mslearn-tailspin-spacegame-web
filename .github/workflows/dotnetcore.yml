name: Spacegame.Web
on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AZURE_WEBAPP_NAME: heyyworld

jobs:
  
  build-and-test:
    name: üß™ Build and Test
    runs-on: ubuntu-latest
    environment: 
      name: AZURE
      url: https://heyyworld.azurewebsites.net/
    
    strategy:
      fail-fast: false
      matrix:
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['csharp', 'javascript']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
        
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet publish -c Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$GITHUB_WORKSPACE/TestResults/Coverage/      

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: space-web
        path: ${{github.workspace}}/Tailspin.SpaceGame.Web/bin/Release/netcoreapp3.1/publish
  
  code-analysis:
    name: üîÜ Code Analysis
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Make sure the actual branch is checked out when running on pull requests
        ref: ${{ github.head_ref }}
    
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  code-ql:
    name: ‚≠ïÔ∏è Security Scanning
    runs-on: ubuntu-latest
    needs: [code-analysis, build-and-test]  

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
  
  webapp-deploy-sandbox:
    name: üì¶ Web App Deploy - Sandbox
    runs-on: ubuntu-latest
    needs: [build-and-test, code-analysis, code-ql]
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: space-web
        path: ${{github.workspace}}
     
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}

  validate-site-sandbox:
    name: ‚úÖ Validate Deployment
    runs-on: ubuntu-latest
    needs: webapp-deploy-sandbox
    
    steps:
    - name: Check the deployed service URL
      uses: jtalk/url-health-check-action@v1.2
      with:
        url: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
        follow-redirect: no
        max-attempts: 3 
        retry-delay: 5s 
